# publishing code used by nightly and on-demand workflows
#
on:
  workflow_call:
    inputs:
      extension_tag:
        description: "branch/tag of the extension to build."
        required: true
        type: string
      force:
        description: "Force publication even if repository hasn't changed"
        default: false
        type: boolean
      is_snapshot:
        type: boolean
        required: true
        description: "true for snapshot, false for full release"
      skip_publication:
        description: "if true, skip publication to VSCE and OpenVSX marketplaces"
        type: boolean
        required: false
        default: false
      skip_repository_push:
        description: "if true, skip the git push or tags and commits"
        type: boolean
        required: false
        default: false
    secrets:
      VSCODE_MARKETPLACE_TOKEN:
        required: true
      OVSX_MARKETPLACE_TOKEN:
        required: true

jobs:
  updates-check:
    runs-on: ubuntu-latest
    outputs:
      repo-cache-hit: ${{ steps.cache.outputs.cache-hit }}
    steps:
      - uses: actions/checkout@v4

      - name: Update Continue Submodule to granite/customization
        run: |
          git submodule update --init --recursive
          cd continue
          git fetch origin granite/customization
          git checkout FETCH_HEAD
          cd ..
          git add continue

      - name: Get Main Repo Commit Hash
        run: git rev-parse HEAD > ./HEAD

      - name: Get Continue Submodule Commit Hash
        run: git -C continue rev-parse HEAD > ./CONTINUE_SUBMODULE_HASH

      - name: Check New Changes
        id: cache
        uses: actions/cache@v4
        with:
          path: |
            HEAD
            CONTINUE_SUBMODULE_HASH
          key: HEAD-${{ hashFiles('HEAD') }}-CONTINUE-${{ hashFiles('CONTINUE_SUBMODULE_HASH') }}

      - name: Commit and push submodule update
        run: |
          if [[ -n "$(git status --porcelain continue)" ]]; then
            git config user.email "action@github.com"
            git config user.name "GitHub Action"
            git commit -m "chore: update continue submodule to latest granite/customization"
            git push origin HEAD:${{ github.ref }}
          fi

  publish-packages:
    needs: updates-check
    if: inputs.force || needs.updates-check.outputs.repo-cache-hit != 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Extension
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.extension_tag }}
          fetch-depth: 0
          filter: blob:none

      - name: Set Up NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Check Out Continue as Git Submodule
        run: git submodule update --init --recursive

      - name: Install Dependencies
        run: npm run install-dependencies

      - name: Tag Release/Snapshot
        run: |
          git config --global user.email "workflow@granitecode.ai"
          git config --global user.name "Automated Workflow"

          if ${{ inputs.is_snapshot }}; then
            npm run tag-snapshot
            echo "PACKAGE_FLAG=--snapshot" >> $GITHUB_ENV
            echo "PUBLISH_FLAG=--pre-release" >> $GITHUB_ENV
          else
            npm run tag-release
            echo "PACKAGE_FLAG=" >> $GITHUB_ENV
            echo "PUBLISH_FLAG=" >> $GITHUB_ENV
          fi

      - name: Build Extension
        run: |
          (cd continue/packages/openai-adapters && npm run build)
          (cd continue/packages/config-yaml && npm run build)
          npm run build

      - name: Create Packages
        run: |
          npm run create-darwin-arm64-package -- $PACKAGE_FLAG
          npm run create-linux-x64-package -- $PACKAGE_FLAG
          npm run create-win32-x64-package -- $PACKAGE_FLAG

      - name: Publish Packages to VS Code Marketplace
        if: inputs.skip_publication == false
        run: |
          npx @vscode/vsce publish \
            -p ${{ secrets.VSCODE_MARKETPLACE_TOKEN }} \
            $PUBLISH_FLAG \
            -i build/*darwin-arm64*.vsix \
            -i build/*linux-x64*.vsix \
            -i build/*win32-x64*.vsix

      - name: Publish Packages to OpenVSX Registry
        if: inputs.skip_publication == false
        run: |
          npx ovsx publish \
            -p ${{ secrets.OVSX_MARKETPLACE_TOKEN }} \
            $PUBLISH_FLAG \
            -i build/*darwin-arm64*.vsix \
            -i build/*linux-x64*.vsix \
            -i build/*win32-x64*.vsix

      - name: Push Changes to Git Repository
        if: inputs.skip_repository_push == false
        run: git push origin --follow-tags HEAD
